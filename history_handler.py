from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from database_extended import db
from datetime import datetime

def history_command(update: Update, context: CallbackContext):
    """–ö–æ–º–∞–Ω–¥–∞ /history - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"""
    
    user_id = update.effective_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    history = db.get_user_transactions_history(user_id, limit=10)
    
    if not history:
        update.message.reply_text(
            "üìã –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø—É—Å—Ç–∞.\n\n"
            "–ù–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞–≤:\n"
            "üí° \"–∫—É–ø–∏–ª –∫–æ—Ñ–µ 800 —Ç–≥\"\n"
            "üí° \"–ø–æ—Ç—Ä–∞—Ç–∏–ª 2500 –Ω–∞ –æ–±–µ–¥\""
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏–µ–π
    message = "üìã *–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:*\n\n"
    
    keyboard = []
    
    for i, trans in enumerate(history, 1):
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
        if isinstance(trans['date'], str):
            date_str = trans['date']
        else:
            date_str = str(trans['date'])
        
        # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        emoji = "üí∞" if trans['type'] == 'income' else "üí∏"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        message += f"{i}. {emoji} *{trans['amount']:,.0f} {trans['currency']}*\n"
        message += f"   üìÖ {date_str} ‚Ä¢ üè∑Ô∏è {trans['category']}\n"
        message += f"   üìù {trans['description']}\n"
        
        if trans['bank']:
            message += f"   üè¶ {trans['bank']}\n"
        
        message += "\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        keyboard.append([
            InlineKeyboardButton(
                f"‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å #{i}", 
                callback_data=f"edit_{trans['id']}"
            ),
            InlineKeyboardButton(
                f"üóëÔ∏è –£–¥–∞–ª–∏—Ç—å #{i}", 
                callback_data=f"delete_{trans['id']}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard.append([
        InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="refresh_history"),
        InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="show_stats")
    ])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    update.message.reply_text(
        message, 
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

def refresh_history_callback(update: Update, context: CallbackContext):
    """–û–±–Ω–æ–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"""
    
    query = update.callback_query
    query.answer()
    
    user_id = update.effective_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
    history = db.get_user_transactions_history(user_id, limit=10)
    
    if not history:
        query.edit_message_text(
            "üìã –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø—É—Å—Ç–∞.\n\n"
            "–ù–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞–≤:\n"
            "üí° \"–∫—É–ø–∏–ª –∫–æ—Ñ–µ 800 —Ç–≥\""
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = "üìã *–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:* _(–æ–±–Ω–æ–≤–ª–µ–Ω–æ)_\n\n"
    
    keyboard = []
    
    for i, trans in enumerate(history, 1):
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
        if isinstance(trans['date'], str):
            date_str = trans['date']
        else:
            date_str = str(trans['date'])
        
        # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        emoji = "üí∞" if trans['type'] == 'income' else "üí∏"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        message += f"{i}. {emoji} *{trans['amount']:,.0f} {trans['currency']}*\n"
        message += f"   üìÖ {date_str} ‚Ä¢ üè∑Ô∏è {trans['category']}\n"
        message += f"   üìù {trans['description']}\n"
        
        if trans['bank']:
            message += f"   üè¶ {trans['bank']}\n"
        
        message += "\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        keyboard.append([
            InlineKeyboardButton(
                f"‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å #{i}", 
                callback_data=f"edit_{trans['id']}"
            ),
            InlineKeyboardButton(
                f"üóëÔ∏è –£–¥–∞–ª–∏—Ç—å #{i}", 
                callback_data=f"delete_{trans['id']}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard.append([
        InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="refresh_history"),
        InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="show_stats")
    ])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        message, 
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

def edit_transaction_callback(update: Update, context: CallbackContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"""
    
    query = update.callback_query
    query.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ callback_data
    transaction_id = int(query.data.split('_')[1])
    user_id = update.effective_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    transaction = db.get_transaction_by_id(transaction_id, user_id)
    
    if not transaction:
        query.edit_message_text(
            "‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞."
        )
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    message = f"‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:*\n\n"
    message += f"üí∞ –°—É–º–º–∞: {transaction['amount']} {transaction['currency']}\n"
    message += f"üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {transaction['category']}\n"
    message += f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {transaction['description']}\n"
    message += f"üè¶ –ë–∞–Ω–∫: {transaction['bank'] or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
    message += f"üìÖ –î–∞—Ç–∞: {transaction['date']}\n\n"
    message += "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?"
    
    keyboard = [
        [
            InlineKeyboardButton("üí∞ –°—É–º–º—É", callback_data=f"edit_amount_{transaction_id}"),
            InlineKeyboardButton("üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data=f"edit_category_{transaction_id}")
        ],
        [
            InlineKeyboardButton("üìù –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_description_{transaction_id}"),
            InlineKeyboardButton("üè¶ –ë–∞–Ω–∫", callback_data=f"edit_bank_{transaction_id}")
        ],
        [
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="refresh_history")
        ]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        message,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

def delete_transaction_callback(update: Update, context: CallbackContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"""
    
    query = update.callback_query
    query.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    transaction_id = int(query.data.split('_')[1])
    user_id = update.effective_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    transaction = db.get_transaction_by_id(transaction_id, user_id)
    
    if not transaction:
        query.edit_message_text(
            "‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞."
        )
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
    message = f"üóëÔ∏è *–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ:*\n\n"
    message += f"üí∞ –°—É–º–º–∞: {transaction['amount']} {transaction['currency']}\n"
    message += f"üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {transaction['category']}\n"
    message += f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {transaction['description']}\n"
    message += f"üìÖ –î–∞—Ç–∞: {transaction['date']}\n\n"
    message += "‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!"
    
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_{transaction_id}"),
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="refresh_history")
        ]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        message,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

def confirm_delete_callback(update: Update, context: CallbackContext):
    """–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"""
    
    query = update.callback_query
    query.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    transaction_id = int(query.data.split('_')[2])
    user_id = update.effective_user.id
    
    # –£–¥–∞–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    if db.delete_transaction(transaction_id, user_id):
        query.edit_message_text(
            "‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /history —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é."
        )
    else:
        query.edit_message_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )