import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext, CallbackQueryHandler
from dotenv import load_dotenv
from database_extended import db
from ai_parser import ai_parser
from history_handler import (
    history_command, 
    refresh_history_callback,
    edit_transaction_callback,
    delete_transaction_callback,
    confirm_delete_callback
)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã
TELEGRAM_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

def start(update: Update, context: CallbackContext):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    user = update.effective_user
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
    db.add_user(user.id, user.username, user.first_name)
    
    welcome_message = f"""
ü§ñ –ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø —Ç–≤–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —Å –ò–ò.

üìù –ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ –º–Ω–µ –æ —Å–≤–æ–∏—Ö —Ç—Ä–∞—Ç–∞—Ö –æ–±—ã—á–Ω—ã–º —è–∑—ã–∫–æ–º:
- "–∫—É–ø–∏–ª –∫–æ—Ñ–µ 800 —Ç–≥"
- "–ø–æ—Ç—Ä–∞—Ç–∏–ª 5000 –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã —Å –∫–∞—Å–ø–∏"
- "–ø–æ–ª—É—á–∏–ª –∑–∞—Ä–ø–ª–∞—Ç—É 350000"

üÜï **–ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
- /history - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
- /help - —Å–ø—Ä–∞–≤–∫–∞

–Ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—é —Å—É–º–º—ã, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –±–∞–Ω–∫–∏!
"""
    
    update.message.reply_text(welcome_message)

def help_command(update: Update, context: CallbackContext):
    """–ö–æ–º–∞–Ω–¥–∞ /help"""
    help_text = """
ü§ñ **–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç —Å –ò–ò**

üìù **–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞—Ç—É:**
- "–∫—É–ø–∏–ª –∫–æ—Ñ–µ 800 —Ç–≥"
- "–ø–æ—Ç—Ä–∞—Ç–∏–ª 2500 –Ω–∞ –æ–±–µ–¥"
- "–ø–æ–ª—É—á–∏–ª –∑–∞—Ä–ø–ª–∞—Ç—É 350000"

üìã **–ö–æ–º–∞–Ω–¥—ã:**
- /history - –∏—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
- /help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

‚úèÔ∏è **–í /history –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å–∏**
"""
    
    update.message.reply_text(help_text, parse_mode='Markdown')

def handle_message(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    message_text = update.message.text
    user_id = update.effective_user.id
    user_name = update.effective_user.first_name
    
    print(f"üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_name}: {message_text}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
    db.add_user(user_id, update.effective_user.username, user_name)
    
    # –ü–∞—Ä—Å–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ò–ò
    ai_result = ai_parser.parse_transaction(message_text)
    
    if ai_result["success"]:
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        transaction_data = {
            'user_id': user_id,
            'amount': ai_result['amount'],
            'currency': ai_result.get('currency', 'KZT'),
            'category': ai_result['category'],
            'description': ai_result['description'],
            'bank': ai_result.get('bank'),
            'type': ai_result['type'],
            'confidence': ai_result['confidence'],
            'raw_message': message_text
        }
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if db.add_transaction(transaction_data):
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            emoji = "üí∞" if ai_result['type'] == 'income' else "üí∏"
            
            response = f"""
{emoji} **–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!**

üí∞ –°—É–º–º–∞: {ai_result['amount']:,.0f} {ai_result['currency']}
üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {ai_result['category']}
üìù –û–ø–∏—Å–∞–Ω–∏–µ: {ai_result['description']}
"""
            
            if ai_result.get('bank'):
                response += f"üè¶ –ë–∞–Ω–∫: {ai_result['bank']}\n"
            
            response += f"üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {ai_result['confidence']:.0%}\n"
            response += f"\nüìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /history –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π"
            
            update.message.reply_text(response, parse_mode='Markdown')
            
        else:
            update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.")
    else:
        # –ò–ò –Ω–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        response = f"""
ü§î –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é.

üí° **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–∞–∫:**
- "–∫—É–ø–∏–ª –∫–æ—Ñ–µ 800 —Ç–≥"
- "–ø–æ—Ç—Ä–∞—Ç–∏–ª 2500 –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã"

‚ùå **–û—à–∏–±–∫–∞:** {ai_result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}
"""
        
        update.message.reply_text(response, parse_mode='Markdown')

def error_handler(update: Update, context: CallbackContext):
    """–õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏"""
    logger.warning(f'Update {update} caused error {context.error}')

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    
    if not TELEGRAM_TOKEN:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª")
        return
    
    if not OPENAI_API_KEY:
        print("‚ùå OpenAI API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª")
        return
    
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –±–æ—Ç–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π...")
    
    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    updater = Updater(token=TELEGRAM_TOKEN, use_context=True)
    dp = updater.dispatcher
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help_command))
    dp.add_handler(CommandHandler("history", history_command))  # –ù–û–í–ê–Ø –ö–û–ú–ê–ù–î–ê
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    
    # –ù–û–í–´–ï –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
    dp.add_handler(CallbackQueryHandler(refresh_history_callback, pattern="^refresh_history$"))
    dp.add_handler(CallbackQueryHandler(edit_transaction_callback, pattern="^edit_\d+$"))
    dp.add_handler(CallbackQueryHandler(delete_transaction_callback, pattern="^delete_\d+$"))
    dp.add_handler(CallbackQueryHandler(confirm_delete_callback, pattern="^confirm_delete_\d+$"))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    dp.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º
    updater.start_polling()
    print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ö–æ–º–∞–Ω–¥—ã:")
    print("   üìã /history - –∏—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")
    print("   ‚ùì /help - —Å–ø—Ä–∞–≤–∫–∞")
    print("   üõë –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    updater.idle()

if __name__ == '__main__':
    main()